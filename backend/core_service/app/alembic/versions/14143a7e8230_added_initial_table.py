"""Added initial table

Revision ID: 14143a7e8230
Revises: 6414b1fce509
Create Date: 2025-02-16 03:10:32.096517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '14143a7e8230'
down_revision: Union[str, None] = '6414b1fce509'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookings')
    op.drop_table('transactions')
    op.drop_table('conversations')
    op.drop_table('activities')
    op.drop_table('payment_histories')
    op.drop_table('ratings')
    op.drop_table('messages')
    op.drop_table('booking_items')
    op.drop_table('activity_ratings')
    op.drop_table('trip_ratings')
    op.drop_table('trips')
    op.drop_table('addresses')
    op.drop_table('trip_openings')
    op.drop_table('trip_rating_images')
    op.drop_table('cities')
    op.drop_table('payments')
    op.drop_table('search_logs')
    op.drop_table('activity_item_images')
    op.drop_table('conversation_participants')
    op.drop_table('trip_opening_items')
    op.drop_table('trip_items')
    op.drop_table('trip_images')
    op.drop_table('activity_items')
    op.drop_table('rating_images')
    op.drop_table('activity_rating_images')
    op.add_column('users', sa.Column('has_given_consent', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'has_given_consent')
    op.create_table('activity_rating_images',
    sa.Column('activity_rating_image_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_rating_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_rating_image_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['activity_rating_id'], ['activity_ratings.activity_rating_id'], name='activity_rating_images_activity_rating_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('activity_rating_image_id', name='activity_rating_images_pkey')
    )
    op.create_table('rating_images',
    sa.Column('rating_image_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rating_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rating_image_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['rating_id'], ['ratings.rating_id'], name='rating_images_rating_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rating_image_id', name='rating_images_pkey')
    )
    op.create_table('activity_items',
    sa.Column('activity_item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_item_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('activity_item_category', postgresql.ENUM('ELECTRONICS', 'FASHION', 'BEAUTY', 'FOOD', 'HOME', 'SPORT', 'OTHER', name='activityitemcategoryenum'), autoincrement=False, nullable=True),
    sa.Column('activity_item_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('activity_item_traveler_reward', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('activity_item_type', postgresql.ENUM('INCLUDED', name='activityitemtypeenum'), autoincrement=False, nullable=True),
    sa.Column('activity_item_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('activity_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.activity_id'], name='activity_items_activity_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('activity_item_id', name='activity_items_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('trip_images',
    sa.Column('trip_image_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('trip_image_is_primary', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], name='trip_images_trip_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trip_image_id', name='trip_images_pkey')
    )
    op.create_table('trip_items',
    sa.Column('trip_item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_item_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('trip_item_description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('trip_item_category', postgresql.ENUM('ACTIVITY', 'FOOD', 'TRANSPORTATION', 'STAY', 'OTHER', name='tripitemcategoryenum'), autoincrement=False, nullable=True),
    sa.Column('trip_item_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trip_item_traveler_reward', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('trip_item_type', postgresql.ENUM('INCLUDED', 'OPTIONAL', 'EXCLUDED', name='tripitemtypeenum'), autoincrement=False, nullable=True),
    sa.Column('trip_item_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('trip_item_image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trip_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], name='trip_items_trip_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trip_item_id', name='trip_items_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('trip_opening_items',
    sa.Column('trip_opening_item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_opening_item_traveler_reward', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('is_limited_availability', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('trip_opening_item_total_availability', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('trip_opening_item_total_booking', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trip_opening_item_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('trip_opening_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_item_id'], ['trip_items.trip_item_id'], name='trip_opening_items_trip_item_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trip_opening_id'], ['trip_openings.trip_opening_id'], name='trip_opening_items_trip_opening_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trip_opening_item_id', name='trip_opening_items_pkey')
    )
    op.create_table('conversation_participants',
    sa.Column('conversation_participant_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('conversation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.conversation_id'], name='conversation_participants_conversation_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='conversation_participants_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('conversation_participant_id', name='conversation_participants_pkey')
    )
    op.create_table('activity_item_images',
    sa.Column('activity_item_image_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_item_image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('activity_item_image_is_primary', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['activity_items.activity_item_id'], name='activity_item_images_item_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('activity_item_image_id', name='activity_item_images_pkey')
    )
    op.create_table('search_logs',
    sa.Column('search_log_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('search_log_filters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('search_log_id', name='search_logs_pkey')
    )
    op.create_table('payments',
    sa.Column('payment_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('payment_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('payment_remaining_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('payment_reference', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payment_external_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_status', postgresql.ENUM('PENDING', 'COMPLETED', 'PARTIAL', 'FAILED', name='paymentstatus'), autoincrement=False, nullable=True),
    sa.Column('payment_method', postgresql.ENUM('CARD', 'MOBILE_MONEY', 'BANK_TRANSFER', 'CASH', name='paymentmethodenum'), autoincrement=False, nullable=False),
    sa.Column('booking_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.booking_id'], name='payments_booking_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='payments_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payment_id', name='payments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cities',
    sa.Column('city_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('city_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('city_country', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('city_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('city_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('city_image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('city_id', name='cities_pkey')
    )
    op.create_table('trip_rating_images',
    sa.Column('trip_rating_image_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_rating_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_rating_image', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_rating_id'], ['trip_ratings.trip_rating_id'], name='trip_rating_images_trip_rating_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trip_rating_image_id', name='trip_rating_images_pkey')
    )
    op.create_table('trip_openings',
    sa.Column('trip_opening_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_opening_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('trip_opening_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('trip_opening_total_reward', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('is_limited_availability', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('trip_opening_total_availability', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trip_opening_total_booking', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trip_opening_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('trip_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], name='trip_openings_trip_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trip_opening_id', name='trip_openings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('addresses',
    sa.Column('address_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('address_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_city', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_country', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_postal_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_is_primary', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('address_is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('address_latitude', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_longitude', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='addresses_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('address_id', name='addresses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('trips',
    sa.Column('trip_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('trip_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('trip_origin', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trip_destination', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trip_link_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trip_upvote', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trip_downvote', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trip_base_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('trip_base_reward', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('trip_creation_status', postgresql.ENUM('TRIP_ITEM_CREATION', 'TRIP_OPENING_CREATION', 'TRIP_IMAGES_CREATION', 'COMPLETED', name='tripcreationstatusenum'), autoincrement=False, nullable=True),
    sa.Column('host_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['host_id'], ['users.user_id'], name='trips_host_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trip_id', name='trips_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('trip_ratings',
    sa.Column('trip_rating_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_client_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trip_rating_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('trip_rating_review', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('booking_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.booking_id'], name='trip_ratings_booking_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trip_client_id'], ['users.user_id'], name='trip_ratings_trip_client_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], name='trip_ratings_trip_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trip_rating_id', name='trip_ratings_pkey')
    )
    op.create_table('activity_ratings',
    sa.Column('activity_rating_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_client_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_rating_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('activity_rating_review', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['activity_client_id'], ['users.user_id'], name='activity_ratings_activity_client_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.activity_id'], name='activity_ratings_activity_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('activity_rating_id', name='activity_ratings_pkey')
    )
    op.create_table('booking_items',
    sa.Column('booking_item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('booking_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('booking_item_type', postgresql.ENUM('ACTIVITY', 'TRIP', name='bookingitemtype'), autoincrement=False, nullable=False),
    sa.Column('booking_item_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('booking_item_quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('booking_item_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('trip_opening_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.booking_id'], name='booking_items_booking_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trip_opening_id'], ['trip_openings.trip_opening_id'], name='booking_items_trip_opening_id_fkey'),
    sa.PrimaryKeyConstraint('booking_item_id', name='booking_items_pkey')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('message_type', postgresql.ENUM('TEXT', 'IMAGE', 'VIDEO', 'AUDIO', 'FILE', name='messagetypeenum'), autoincrement=False, nullable=False),
    sa.Column('message_content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('sender_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('receiver_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.user_id'], name='messages_receiver_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], name='messages_sender_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('message_id', name='messages_pkey')
    )
    op.create_table('ratings',
    sa.Column('rating_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('traveler_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rating_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating_review', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.user_id'], name='ratings_client_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['traveler_id'], ['users.user_id'], name='ratings_traveler_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rating_id', name='ratings_pkey')
    )
    op.create_table('payment_histories',
    sa.Column('payment_history_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('payment_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('payment_reference', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payment_external_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_status', postgresql.ENUM('PENDING', 'COMPLETED', 'PARTIAL', 'FAILED', name='paymentstatus'), autoincrement=False, nullable=True),
    sa.Column('payment_method', postgresql.ENUM('CARD', 'MOBILE_MONEY', 'BANK_TRANSFER', 'CASH', name='paymentmethodenum'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('booking_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.booking_id'], name='payment_histories_booking_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.payment_id'], name='payment_histories_payment_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='payment_histories_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payment_history_id', name='payment_histories_pkey')
    )
    op.create_table('activities',
    sa.Column('activity_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('activity_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activity_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('activity_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('activity_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('activity_total_availability', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('activity_total_booking', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('address_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.address_id'], name='activities_address_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='activities_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('activity_id', name='activities_pkey')
    )
    op.create_table('conversations',
    sa.Column('conversation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('receiver_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.user_id'], name='conversations_receiver_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], name='conversations_sender_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('conversation_id', name='conversations_pkey')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('transaction_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('transaction_reference', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('transaction_method', postgresql.ENUM('CARD', 'MOBILE_MONEY', 'BANK_TRANSFER', 'CASH', name='paymentmethodenum'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('booking_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.booking_id'], name='transactions_booking_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='transactions_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('transaction_id', name='transactions_pkey')
    )
    op.create_table('bookings',
    sa.Column('booking_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('booking_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('booking_total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('booking_total_traveler_reward', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('booking_status', postgresql.ENUM('INITIATED', 'PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('host_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.user_id'], name='bookings_client_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['host_id'], ['users.user_id'], name='bookings_host_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('booking_id', name='bookings_pkey'),
    sa.UniqueConstraint('booking_number', name='bookings_booking_number_key')
    )
    # ### end Alembic commands ###
